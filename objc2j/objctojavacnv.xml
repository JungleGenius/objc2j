<?xml version="1.0" encoding="UTF-8"?>
<project name="objctojavacnv" default="all">


    <property file="objctojavacnv.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value="-verbose"/>
    <property name="compiler.max.memory" value="128m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <include name="**/?*.properties"/>
        <include name="**/?*.xml"/>
        <include name="**/?*.gif"/>
        <include name="**/?*.png"/>
        <include name="**/?*.jpeg"/>
        <include name="**/?*.jpg"/>
        <include name="**/?*.html"/>
        <include name="**/?*.dtd"/>
        <include name="**/?*.tld"/>
        <include name="**/?*.ftl"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
    <path id="jdk.classpath.1.7">
        <fileset dir="${jdk.home.1.7}">
            <include name="jre/lib/alt-rt.jar"/>
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunec.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunmscapi.jar"/>
            <include name="jre/lib/ext/zipfs.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.7}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module ObjCtoJavaCnv -->

    <dirname property="module.objctojavacnv.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.objctojavacnv" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.objctojavacnv" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.objctojavacnv" value="${project.jdk.classpath}"/>

    <property name="compiler.args.objctojavacnv" value="${compiler.args}"/>

    <property name="objctojavacnv.output.dir" value="${module.objctojavacnv.basedir}/out/production/ObjCtoJavaCnv"/>
    <property name="objctojavacnv.testoutput.dir" value="${module.objctojavacnv.basedir}/out/test/ObjCtoJavaCnv"/>

    <path id="objctojavacnv.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="objctojavacnv.module.production.classpath">
        <path refid="${module.jdk.classpath.objctojavacnv}"/>
        <pathelement location="${basedir}/../libs/commons-io-2.0.1.jar"/>
        <pathelement location="${basedir}/../libs/antlr-3.4-complete.jar"/>
        <pathelement location="${basedir}/../libs/ant.jar"/>
    </path>

    <path id="objctojavacnv.runtime.production.module.classpath">
        <pathelement location="${objctojavacnv.output.dir}"/>
        <pathelement location="${basedir}/../libs/commons-io-2.0.1.jar"/>
        <pathelement location="${basedir}/../libs/antlr-3.4-complete.jar"/>
        <pathelement location="${basedir}/../libs/ant.jar"/>
    </path>

    <path id="objctojavacnv.module.classpath">
        <path refid="${module.jdk.classpath.objctojavacnv}"/>
        <pathelement location="${objctojavacnv.output.dir}"/>
        <pathelement location="${basedir}/../libs/commons-io-2.0.1.jar"/>
        <pathelement location="${basedir}/../libs/antlr-3.4-complete.jar"/>
        <pathelement location="${basedir}/../libs/ant.jar"/>
    </path>

    <path id="objctojavacnv.runtime.module.classpath">
        <pathelement location="${objctojavacnv.testoutput.dir}"/>
        <pathelement location="${objctojavacnv.output.dir}"/>
        <pathelement location="${basedir}/../libs/commons-io-2.0.1.jar"/>
        <pathelement location="${basedir}/../libs/antlr-3.4-complete.jar"/>
        <pathelement location="${basedir}/../libs/ant.jar"/>
    </path>


    <patternset id="excluded.from.module.objctojavacnv">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.objctojavacnv">
        <patternset refid="excluded.from.module.objctojavacnv"/>
    </patternset>

    <path id="objctojavacnv.module.sourcepath">
        <dirset dir="${module.objctojavacnv.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="objctojavacnv.module.test.sourcepath">
        <dirset dir="${module.objctojavacnv.basedir}">
            <include name="tests"/>
        </dirset>
    </path>


    <target name="compile.module.objctojavacnv"
            depends="compile.module.objctojavacnv.production,compile.module.objctojavacnv.tests"
            description="Compile module ObjCtoJavaCnv"/>

    <target name="compile.module.objctojavacnv.production"
            description="Compile module ObjCtoJavaCnv; production classes">
        <mkdir dir="${objctojavacnv.output.dir}"/>
        <javac destdir="${objctojavacnv.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true"
               executable="${module.jdk.bin.objctojavacnv}/javac">
            <compilerarg line="${compiler.args.objctojavacnv}"/>
            <bootclasspath refid="objctojavacnv.module.bootclasspath"/>
            <classpath refid="objctojavacnv.module.production.classpath"/>
            <src refid="objctojavacnv.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.objctojavacnv"/>
        </javac>

        <copy todir="${objctojavacnv.output.dir}">
            <fileset dir="${module.objctojavacnv.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.objctojavacnv.tests" depends="compile.module.objctojavacnv.production"
            description="compile module ObjCtoJavaCnv; test classes" unless="skip.tests">
        <mkdir dir="${objctojavacnv.testoutput.dir}"/>
        <javac destdir="${objctojavacnv.testoutput.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true"
               executable="${module.jdk.bin.objctojavacnv}/javac">
            <compilerarg line="${compiler.args.objctojavacnv}"/>
            <bootclasspath refid="objctojavacnv.module.bootclasspath"/>
            <classpath refid="objctojavacnv.module.classpath"/>
            <src refid="objctojavacnv.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.objctojavacnv"/>
        </javac>

        <copy todir="${objctojavacnv.testoutput.dir}">
            <fileset dir="${module.objctojavacnv.basedir}/tests">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.objctojavacnv" description="cleanup module">
        <delete dir="${objctojavacnv.output.dir}"/>
        <delete dir="${objctojavacnv.testoutput.dir}"/>
    </target>

    <taskdef name="Antlr3PostProcess" classname="ru.andremoniy.objctojavacnv.antlr.output.Antlr3PostProcess" classpathref="objctojavacnv.runtime.module.classpath"/>

    <target name="init" description="Build initialization">

        <replace file="src/ru/andremoniy/objctojavacnv/antlr/output/ObjcmParser.java"
                 token="public static final String[] tokenNames" value="public final String[] tokenNames"/>
        <replace file="src/ru/andremoniy/objctojavacnv/antlr/output/ObjcmParser.java" token="ObjcmParser.tokenNames"
                 value="tokenNames"/>
        <Antlr3PostProcess oldTarget="src/ru/andremoniy/objctojavacnv/antlr/output/ObjcmParser.java"
                           pkg="ru.andremoniy.objctojavacnv.antlr.output">
        </Antlr3PostProcess>
    </target>

    <target name="clean" depends="clean.module.objctojavacnv" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.objctojavacnv" description="build all modules"/>

    <target name="all" depends="build.modules" description="build all"/>
</project>